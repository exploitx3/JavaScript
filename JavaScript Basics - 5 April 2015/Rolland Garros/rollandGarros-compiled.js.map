{"version":3,"sources":["rollandGarros.js"],"names":[],"mappings":"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","file":"rollandGarros-compiled.js","sourcesContent":["/**\r\n * Created by Leet on 1/10/2016.\r\n */\r\nfunction rollandGarrosStatCalculator(inputArray) {\r\n    var playersDatabase = new Array();\r\n\r\n    for (var i = 0; i < inputArray.length; i++) {\r\n        var spaceReplacePattern = /\\s+/g;\r\n        inputArray[i] = inputArray[i].replace(spaceReplacePattern, ' ');\r\n        var playerSplitPattern = /([A-Za-z][A-Za-z]{2,50}\\s[A-Za-z][A-Za-z]+)(?:\\s*vs.\\s*)([A-Za-z][A-Za-z]+\\s[A-Za-z][A-Za-z]+)(?:\\s*:\\s*)(.+)/g;\r\n        var matches;\r\n        while (matches = playerSplitPattern.exec(inputArray[i])) {\r\n\r\n            var firstPlayerName = matches[1];\r\n            var secondPlayerName = matches[2];\r\n            var firstPlayerGamesWon = 0;\r\n            var firstPlayerGamesLost = 0;\r\n            var firstPlayerSetsWon = 0;\r\n            var firstPlayerSetsLost = 0;\r\n            var secondPlayerGamesWon = 0;\r\n            var secondPlayerGamesLost = 0;\r\n            var secondPlayerSetsWon = 0;\r\n            var secondPlayerSetsLost = 0;\r\n\r\n            var scoreArray = matches[3].split(' ');\r\n            for (var j = 0; j < scoreArray.length; j++) {\r\n                var currentMatch = scoreArray[j].split('-');\r\n                var currentFirstPlayerGames = Number(currentMatch[0]);\r\n                var currentSecondPlayerGames = Number(currentMatch[1]);\r\n                if (currentFirstPlayerGames > currentSecondPlayerGames) {\r\n                    firstPlayerSetsWon++;\r\n                    secondPlayerSetsLost++;\r\n                } else {\r\n                    secondPlayerSetsWon++;\r\n                    firstPlayerSetsLost++;\r\n                }\r\n                firstPlayerGamesWon += currentFirstPlayerGames;\r\n                firstPlayerGamesLost += currentSecondPlayerGames;\r\n                secondPlayerGamesWon += currentSecondPlayerGames;\r\n                secondPlayerGamesLost += currentFirstPlayerGames;\r\n            }\r\n            var firstPlayerExists = false;\r\n            var firstPlayerIndex = 0;\r\n            for (var j = 0; j < playersDatabase.length; j++) {\r\n                if (playersDatabase[j][\"name\"] == firstPlayerName) {\r\n                    firstPlayerExists = true;\r\n                    firstPlayerIndex = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (firstPlayerExists) {\r\n                playersDatabase[firstPlayerIndex][\"matchesWon\"] += (firstPlayerSetsWon > secondPlayerSetsWon ? 1 : 0);\r\n                playersDatabase[firstPlayerIndex][\"matchesLost\"] += (firstPlayerSetsWon > secondPlayerSetsWon ? 0 : 1);\r\n                playersDatabase[firstPlayerIndex][\"setsWon\"] += (firstPlayerSetsWon);\r\n                playersDatabase[firstPlayerIndex][\"setsLost\"] += (firstPlayerSetsLost);\r\n                playersDatabase[firstPlayerIndex][\"gamesWon\"] += (firstPlayerGamesWon);\r\n                playersDatabase[firstPlayerIndex][\"gamesLost\"] += (firstPlayerGamesLost);\r\n            } else {\r\n                var newArray = {};\r\n                newArray[\"name\"] = firstPlayerName;\r\n                newArray[\"matchesWon\"] = (firstPlayerSetsWon > secondPlayerSetsWon ? 1 : 0);\r\n                newArray[\"matchesLost\"] = (firstPlayerSetsWon > secondPlayerSetsWon ? 0 : 1);\r\n                newArray[\"setsWon\"] = (firstPlayerSetsWon);\r\n                newArray[\"setsLost\"] = (firstPlayerSetsLost);\r\n                newArray[\"gamesWon\"] = (firstPlayerGamesWon);\r\n                newArray[\"gamesLost\"] = (firstPlayerGamesLost);\r\n                playersDatabase.push(newArray);\r\n            }\r\n            var secondPlayerExists = false;\r\n            var secondPlayerIndex = 0;\r\n            for (var j = 0; j < playersDatabase.length; j++) {\r\n                if (playersDatabase[j][\"name\"] == secondPlayerName) {\r\n                    secondPlayerExists = true;\r\n                    secondPlayerIndex = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (secondPlayerExists) {\r\n                playersDatabase[secondPlayerIndex][\"matchesWon\"] += (secondPlayerSetsWon > firstPlayerSetsWon ? 1 : 0);\r\n                playersDatabase[secondPlayerIndex][\"matchesLost\"] += (secondPlayerSetsWon > firstPlayerSetsWon ? 0 : 1);\r\n                playersDatabase[secondPlayerIndex][\"setsWon\"] += (secondPlayerSetsWon);\r\n                playersDatabase[secondPlayerIndex][\"setsLost\"] += (secondPlayerSetsLost);\r\n                playersDatabase[secondPlayerIndex][\"gamesWon\"] += (secondPlayerGamesWon);\r\n                playersDatabase[secondPlayerIndex][\"gamesLost\"] += (secondPlayerGamesLost);\r\n            } else {\r\n                var newArray = {};\r\n                newArray[\"name\"] = secondPlayerName;\r\n                newArray[\"matchesWon\"] = (secondPlayerSetsWon > firstPlayerSetsWon ? 1 : 0);\r\n                newArray[\"matchesLost\"] = (secondPlayerSetsWon > firstPlayerSetsWon ? 0 : 1);\r\n                newArray[\"setsWon\"] = (secondPlayerSetsWon);\r\n                newArray[\"setsLost\"] = (secondPlayerSetsLost);\r\n                newArray[\"gamesWon\"] = (secondPlayerGamesWon);\r\n                newArray[\"gamesLost\"] = (secondPlayerGamesLost);\r\n                playersDatabase.push(newArray);\r\n            }\r\n        }\r\n    }\r\n    //for (var i = 0; i < playersDatabase.length; i++) {\r\n    console.log(JSON.stringify(rollandGarrosArraySorter(playersDatabase)));\r\n    //}\r\n\r\n    function rollandGarrosArraySorter(playersArray) {\r\n        var sortedArray = playersArray.sort((a, b) => {\r\n            if ((parseInt(a['matchesWon']) !== parseInt(b['matchesWon']))) {\r\n                return b.matchesWon - a.matchesWon;\r\n            }\r\n\r\n            if ((parseInt(a['matchesWon']) === parseInt(b['matchesWon'])) &&\r\n                (parseInt(a['setsWon']) !== parseInt(b['setsWon']))) {\r\n                return b.setsWon - a.setsWon;\r\n            }\r\n\r\n            if ((parseInt(a['matchesWon']) === parseInt(b['matchesWon'])) &&\r\n                (parseInt(a['setsWon']) === parseInt(b['setsWon'])) &&\r\n                (parseInt(a['gamesWon']) !== parseInt(b['gamesWon']))) {\r\n                return b.gamesWon - a.gamesWon;\r\n            }\r\n\r\n\r\n            if ((parseInt(a.matchesWon) === parseInt(b.matchesWon)) &&\r\n                (parseInt(a.setsWon) === parseInt(b.setsWon)) &&\r\n                (parseInt(a.gamesWon) === parseInt(b.gamesWon))) {\r\n                return (a['name'].localeCompare(b['name']));\r\n            }\r\n\r\n            return -1;\r\n\r\n            //\r\n            //if (parseInt(a[\"matchesWon\"]) < parseInt(b[\"matchesWon\"])) {\r\n            //    return true;\r\n            //} else if (parseInt(a['matchesWon']) == parseInt(b['matchesWon'])) {\r\n            //    if (parseInt(a['setsWon']) < parseInt(b['setsWon'])) {\r\n            //        return true;\r\n            //    } else if (parseInt(a['setsWon']) == parseInt(b['setsWon'])) {\r\n            //        if (parseInt(a['gamesWon']) < parseInt(b['gamesWon'])) {\r\n            //            return true;\r\n            //        } else if (parseInt(a['gamesWon']) == parseInt(b['gamesWon'])) {\r\n            //\r\n            //        }else {\r\n            //            return false;\r\n            //        }\r\n            //    }\r\n            //}\r\n        });\r\n        return sortedArray;\r\n    }\r\n}\r\n\r\n\r\nvar inputArray = [\r\n    'Novak Djokovic vs. Roger Federer : 6-3 6-3',\r\n    'Roger    Federer    vs.        Novak Djokovic    :         6-2 6-3',\r\n    'Rafael Nadal vs. Andy Murray : 4-6 6-2 5-7',\r\n    'Andy Murray vs. David     Ferrer : 6-4 7-6',\r\n    'Tomas   Bedrych vs. Kei Nishikori : 4-6 6-4 6-3 4-6 5-7',\r\n    'Grigor Dimitrov vs. Milos Raonic : 6-3 4-6 7-6 6-2',\r\n    'Pete Sampras vs. Andre Agassi : 2-1',\r\n    'Boris Beckervs.Andre        Agassi:2-1'];\r\nrollandGarrosStatCalculator(inputArray);\r\n\r\n//name\r\n//matchesWon\r\n//matchesLost\r\n//setsWon\r\n//setsLost\r\n//gamesWon\r\n//gamesLost\r\n\r\n\r\n//[{\"name\":\"Andy Murray\",\"matchesWon\":2,\"matchesLost\":0,\"setsWon\":4,\"setsLost\":1,\"gamesWon\":28,\"gamesLost\":25},\r\n// {\"name\":\"Kei Nishikori\",\"matchesWon\":1,\"matchesLost\":0,\"setsWon\":3,\"setsLost\":2,\"gamesWon\":26,\"gamesLost\":25},\r\n// {\"name\":\"Grigor Dimitrov\",\"matchesWon\":1,\"matchesLost\":0,\"setsWon\":3,\"setsLost\":1,\"gamesWon\":23,\"gamesLost\":17},\r\n// {\"name\":\"Roger Federer\",\"matchesWon\":1,\"matchesLost\":1,\"setsWon\":2,\"setsLost\":2,\"gamesWon\":18,\"gamesLost\":17},\r\n// {\"name\":\"Novak Djokovic\",\"matchesWon\":1,\"matchesLost\":1,\"setsWon\":2,\"setsLost\":2,\"gamesWon\":17,\"gamesLost\":18},\r\n// {\"name\":\"Boris Becker\",\"matchesWon\":1,\"matchesLost\":0,\"setsWon\":1,\"setsLost\":0,\"gamesWon\":2,\"gamesLost\":1},\r\n// {\"name\":\"Pete Sampras\",\"matchesWon\":1,\"matchesLost\":0,\"setsWon\":1,\"setsLost\":0,\"gamesWon\":2,\"gamesLost\":1},\r\n// {\"name\":\"Tomas Bedrych\",\"matchesWon\":0,\"matchesLost\":1,\"setsWon\":2,\"setsLost\":3,\"gamesWon\":25,\"gamesLost\":26},\r\n// {\"name\":\"Milos Raonic\",\"matchesWon\":0,\"matchesLost\":1,\"setsWon\":1,\"setsLost\":3,\"gamesWon\":17,\"gamesLost\":23},\r\n// {\"name\":\"Rafael Nadal\",\"matchesWon\":0,\"matchesLost\":1,\"setsWon\":1,\"setsLost\":2,\"gamesWon\":15,\"gamesLost\":15},\r\n// {\"name\":\"David Ferrer\",\"matchesWon\":0,\"matchesLost\":1,\"setsWon\":0,\"setsLost\":2,\"gamesWon\":10,\"gamesLost\":13},\r\n// {\"name\":\"Andre Agassi\",\"matchesWon\":0,\"matchesLost\":2,\"setsWon\":0,\"setsLost\":2,\"gamesWon\":2,\"gamesLost\":4}]"]}