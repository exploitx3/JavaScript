{"version":3,"sources":["BiggestTableRow.js"],"names":[],"mappings":"AAAA,SAAS,KAAK,CAAC,UAAU,EAAC;AACtB,QAAI,OAAO,GAAG,WAAW,CAAC;AAC1B,QAAI,kBAAkB,GAAG,EAAE,CAAC;;AAE5B,QAAI,KAAK,CAAC;AACV,QAAI,UAAU,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;AACrC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAC1C,eAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAC;AACtC,gBAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;AAChB,yBAAS;aACZ;AACD,sBAAU,CAAC,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACtC;AACD,kBAAU,CAAC,KAAK,GAAG,CAAC,CAAC;;AAErB,0BAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACpC,kBAAU,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;KACpC;AACD,QAAG,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,eAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAC1B;AACD,sBAAkB,GAAG,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACzD,YAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAC;AACf,mBAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;SAC5B,MAAK;AACF,mBAAO,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;SACxB;KACJ,CAAC,CAAC;;AAEH,QAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,WAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;AAChE,YAAG,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;AAChB,qBAAS;SACZ;;AAED,wBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KACnC;;AAED,QAAG,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAC;AAC7B,eAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;KAC1B,MAAK;AACF,eAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KACjF;CAEJ;;AAED,IAAI,WAAW,GAAG,CACd,SAAS,EACT,qEAAqE,EACrE,yDAAyD,EACzD,wDAAwD,EACxD,wDAAwD,EACxD,2DAA2D,EAC3D,UAAU,CACb,CAAC;;AAEF,KAAK,CAAC,WAAW,CAAC,CAAC","file":"BiggestTableRow-compiled.js","sourcesContent":["function solve(inputArray){\r\n    var pattern = /[0-9-.]+/g;\r\n    var columnSumContainer = [];\r\n\r\n    var match;\r\n    var currentCol = { sum: 0, index: 0};\r\n    for (var i = 2; i < inputArray.length-1; i++) {\r\n        while(match = pattern.exec(inputArray[i])){\r\n            if(match[0] === '-'){\r\n                continue;\r\n            }\r\n            currentCol.sum += Number(match[0]);\r\n        }\r\n        currentCol.index = i;\r\n\r\n        columnSumContainer.push(currentCol);\r\n        currentCol = { sum: 0, index: 0};\r\n    }\r\n    if(columnSumContainer.length === 0) {\r\n        console.log('no data');\r\n    }\r\n    columnSumContainer = columnSumContainer.sort(function (a, b) {\r\n        if(b.sum === a.sum){\r\n            return a.index - b.index;\r\n        }else {\r\n            return b.sum - a.sum;\r\n        }\r\n    });\r\n\r\n    var calculateNumbers = [];\r\n    while(match = pattern.exec(inputArray[columnSumContainer[0].index])){\r\n        if(match[0] === '-'){\r\n            continue;\r\n        }\r\n\r\n        calculateNumbers.push(match[0]);\r\n    }\r\n\r\n    if(calculateNumbers.length === 0){\r\n        console.log('no data');\r\n    }else {\r\n        console.log(columnSumContainer[0].sum + ' = ' + calculateNumbers.join(' + '));\r\n    }\r\n\r\n}\r\n\r\nvar inputArray1 = [\r\n    '<table>',\r\n    '<tr><th>Town</th><th>Store1</th><th>Store2</th><th>Store3</th></tr>',\r\n    '<tr><td>Sofia</td><td>0</td><td>-</td><td>0.0</td></tr>',\r\n    '<tr><td>Yambol</td><td>-</td><td>0</td><td>-</td></tr>',\r\n    '<tr><td>Sliven</td><td>-</td><td>0</td><td>-</td></tr>',\r\n    '<tr><td>Kaspichan</td><td>0</td><td>-</td><td>-</td></tr>',\r\n    '</table>'\r\n];\r\n\r\nsolve(inputArray1);"]}