{"version":3,"sources":["exercise.js"],"names":[],"mappings":"AAAA,SAAS,KAAK,CAAC,UAAU,EAAC;AACtB,QAAI,aAAa,GAAG,EAAE,CAAC;;AAEvB,QAAI,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,QAAI,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC;AAChD,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9B,mBAAW,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACvC,gBAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AAC1B,YAAI,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;AACtB,gBAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,YAAG,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC;AACpB,yBAAa,CAAC,IAAI,CAAC,GAAG;AAClB,wBAAQ,EAAE,QAAQ;AAClB,2BAAW,EAAE,CAAC,QAAQ,CAAC;aAC1B,CAAC;SACL,MAAK;AACF,yBAAa,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC;AACzC,gBAAG,aAAa,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAC;AACxD,6BAAa,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAClD;SACJ;KACJ;;AAED,QAAI,oBAAoB,GAAG,EAAE,CAAC;AAC9B,QAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AAC1D,eAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;KAC7B,CAAC,CAAC;AACH,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,4BAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;AAC/B,oBAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AAC5C,uBAAW,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACpE,uBAAO,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAC7B,CAAC;SACL,CAAC;AACF,eAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAE,AAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;KAC3J;CACJ;;AAED,IAAI,UAAU,GAAG,CACb,GAAG,EACH,uBAAuB,EACvB,qBAAqB,EACrB,sBAAsB,EACtB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,sBAAsB,CACzB,CAAC;;AAEF,KAAK,CAAC,UAAU,CAAC,CAAC","file":"exercise-compiled.js","sourcesContent":["function solve(inputArray){\r\n    var logsContainer = {};\r\n\r\n    var count = Number(inputArray[0]);\r\n    var currentLine, user, ipString, name, duration;\r\n    for (var i = 1; i < count+1; i++) {\r\n        currentLine = inputArray[i].split(' ');\r\n        ipString = currentLine[0];\r\n        name = currentLine[1];\r\n        duration = Number(currentLine[2]);\r\n        if(!logsContainer[name]){\r\n            logsContainer[name] = {\r\n                duration: duration,\r\n                ipAddresses: [ipString]\r\n            };\r\n        }else {\r\n            logsContainer[name].duration += duration;\r\n            if(logsContainer[name].ipAddresses.indexOf(ipString) === -1){\r\n                logsContainer[name].ipAddresses.push(ipString);\r\n            }\r\n        }\r\n    }\r\n\r\n    var orderedLogsContainer = {};\r\n    var logKeys = Object.keys(logsContainer).sort(function (a, b) {\r\n        return a.localeCompare(b);\r\n    });\r\n    for (var i = 0; i < logKeys.length; i++) {\r\n        orderedLogsContainer[logKeys[i]] = {\r\n            duration: logsContainer[logKeys[i]].duration,\r\n            ipAddresses: logsContainer[logKeys[i]].ipAddresses.sort(function (a, b) {\r\n                return a.localeCompare(b);\r\n            })\r\n        };\r\n        console.log(logKeys[i] + ': ' + orderedLogsContainer[logKeys[i]].duration + ' ' + '[' +(orderedLogsContainer[logKeys[i]].ipAddresses).join(', ') + ']');\r\n    }\r\n}\r\n\r\nvar inputArray = [\r\n    '7',\r\n    '192.168.0.11 peter 33',\r\n    '10.10.17.33 alex 12',\r\n    '10.10.17.35 peter 30',\r\n    '10.10.17.34 peter 120',\r\n    '10.10.17.34 peter 120',\r\n    '212.50.118.81 alex 46',\r\n    '212.50.118.81 alex 4'\r\n];\r\n\r\nsolve(inputArray);"]}