{"version":3,"sources":["exercise.js"],"names":[],"mappings":"AAAA,SAAS,KAAK,CAAC,UAAU,EAAE;AACvB,QAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC3C,QAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAC5D,eAAO,CAAC,CAAC,MAAM,CAAC;KACnB,CAAC,CAAC,CAAC;;AAEJ,QAAI,kBAAkB,GAAG,EAAE,CAAC;AAC5B,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAE,EAAE;AACrC,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,gBAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,SAAS,EAAE;AAC7C,kCAAkB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aACvD;SACJ;KACJ;AACD,QAAI,eAAe,GAAG,IAAI,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AAC3D,QAAI,MAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC;AACvC,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7B,uBAAe,GAAG,aAAa,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;AACvD,0BAAkB,GAAG,eAAe,CAAC;KACxC;;AAED,WAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAChC,WAAO,CAAC,GAAG,EAAE,CAAA;AACb,aAAS,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE;AACxC,YAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC7B,YAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvE,YAAI,MAAM,GAAM,QAAQ,GAAC,EAAE,AAAE,CAAC;AAC9B,cAAM,IAAE,WAAW,CAAC;AACpB,cAAM,GAAG,MAAM,GAAC,MAAM,CAAC,MAAM,CAAE;AAC/B,YAAG,MAAM,KAAK,MAAM,CAAC,MAAM,EAAC;AACxB,kBAAM,GAAG,CAAC,CAAC;SACd;AACD,YAAI,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AACpC,aAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AAC7B,aAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;AACnC,eAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACzB;CACJ;;AAED,IAAI,UAAU,GAAG,CACb,gBAAgB,CACnB,CAAC;;AAEF,KAAK,CAAC,UAAU,CAAC,CAAC","file":"exercise-compiled.js","sourcesContent":["function solve(inputArray) {\r\n    var words = inputArray[0].match(/[^\\s]+/g);\r\n    var maxWordLength = Math.max.apply(this, words.map(function (a) {\r\n        return a.length;\r\n    }));\r\n\r\n    var concatinatedString = '';\r\n    for (var i = 0; i <= maxWordLength; i++) {\r\n        for (var j = 0; j < words.length; j++) {\r\n            if (words[j][words[j].length - i] !== undefined) {\r\n                concatinatedString += words[j][words[j].length - i];\r\n            }\r\n        }\r\n    }\r\n    var encryptedString = new Array(concatinatedString.length);\r\n    var length = concatinatedString.length;\r\n    for (var i = 0; i < length; i++) {\r\n        encryptedString = charMoveRight(concatinatedString, i);\r\n        concatinatedString = encryptedString;\r\n    }\r\n\r\n    console.log(concatinatedString);\r\n    console.log()\r\n    function charMoveRight(string, indexOfChar) {\r\n        var array = string.split('');\r\n        var charCode = String(string)[indexOfChar].toLowerCase().charCodeAt(0);\r\n        var newPos =  ((charCode-96));\r\n        newPos+=indexOfChar;\r\n        newPos = newPos%string.length ;\r\n        if(newPos === string.length){\r\n            newPos = 0;\r\n        }\r\n        var charToAdd = string[indexOfChar];\r\n        array.splice(indexOfChar, 1);\r\n        array.splice(newPos, 0, charToAdd);\r\n        return array.join('');\r\n    }\r\n}\r\n\r\nvar inputArray = [\r\n    'Fun exam right'\r\n];\r\n\r\nsolve(inputArray);"]}