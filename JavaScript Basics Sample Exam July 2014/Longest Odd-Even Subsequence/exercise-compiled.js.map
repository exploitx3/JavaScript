{"version":3,"sources":["exercise.js"],"names":[],"mappings":"AAAA,SAAS,KAAK,CAAC,UAAU,EAAE;AACvB,QAAI,OAAO,GAAG,UAAU,CAAC;AACzB,QAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AACxD,eAAO,MAAM,CAAC,CAAC,CAAC,CAAC;KACpB,CAAC,CAAC;AACH,QAAI,YAAY,EAAE,SAAS,CAAC;AAC5B,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACzC,oBAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1B,iBAAS,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3B,YAAI,SAAS,KAAK,CAAC,IAAI,YAAY,KAAK,CAAC,EAAE;AACvC,qBAAS,GAAG,AAAC,YAAY,GAAG,CAAC,KAAK,CAAC,GAAI,CAAC,GAAG,CAAC,CAAC;SAChD,MACI,IAAI,YAAY,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;AAC5C,wBAAY,GAAG,CAAC,CAAC;AACjB,qBAAS,GAAG,CAAC,CAAC;SACjB;;AAED,eAAO,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;AAC1B,eAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;KAC9B;;;;AAAA,AAID,QAAI,aAAa,GAAG,CAAC,CAAC;AACtB,QAAI,YAAY,GAAG,CAAC,CAAC;AACrB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACzC,oBAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1B,iBAAS,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3B,YAAI,YAAY,GAAG,CAAC,KAAK,SAAS,GAAG,CAAC,EAAE;AACpC,wBAAY,EAAE,CAAC;SAClB,MAAM;AACH,wBAAY,GAAG,CAAC,CAAC;SACpB;AACD,YAAI,YAAY,GAAG,aAAa,EAAE;AAC9B,yBAAa,GAAG,YAAY,CAAC;SAChC;KACJ;AACD,iBAAa,EAAE,CAAC;AAChB,WAAO,CAAC,GAAG,CAAC,aAAa,CAAC;;CAG7B;AAH8B,AAI/B,IAAI,UAAU,GAAG,CACb,iCAAiC,CACpC,CAAC;;AAEF,KAAK,CAAC,UAAU,CAAC,CAAC","file":"exercise-compiled.js","sourcesContent":["function solve(inputArray) {\r\n    var pattern = /([\\d]+)/g;\r\n    var matches = inputArray[0].match(pattern).map(function (a) {\r\n        return Number(a);\r\n    });\r\n    var currentMatch, nextMatch;\r\n    for (var i = 0; i < matches.length - 2; i++) {\r\n        currentMatch = matches[i];\r\n        nextMatch = matches[i + 1];\r\n        if (nextMatch === 0 && currentMatch !== 0) {\r\n            nextMatch = (currentMatch % 2 === 0) ? 1 : 2;\r\n        }\r\n        else if (currentMatch === 0 && nextMatch === 0) {\r\n            currentMatch = 1;\r\n            nextMatch = 2;\r\n        }\r\n\r\n        matches[i] = currentMatch;\r\n        matches[i + 1] = nextMatch;\r\n    }\r\n\r\n    //console.log(matches);\r\n\r\n    var biggestLength = 0;\r\n    var currentCount = 0;\r\n    for (var i = 0; i < matches.length - 1; i++) {\r\n        currentMatch = matches[i];\r\n        nextMatch = matches[i + 1];\r\n        if (currentMatch % 2 !== nextMatch % 2) {\r\n            currentCount++;\r\n        } else {\r\n            currentCount = 0;\r\n        }\r\n        if (currentCount > biggestLength) {\r\n            biggestLength = currentCount;\r\n        }\r\n    }\r\n    biggestLength++;\r\n    console.log(biggestLength);\r\n//console.log(arrayContainer[0].join(', '));\r\n\r\n}\r\nvar inputArray = [\r\n    '(1) (0) (0) (0) (0) (0) (0) (1)'\r\n];\r\n\r\nsolve(inputArray);"]}